{"version":3,"sources":["components/ErrorMessage.js","pages/signin/SignInPage.js","pages/signup/SignUpPage.js","components/Task.js","components/TasksFilters.js","pages/tasks/TasksPage.js","pages/create-task/CreateTaskPage.js","App.js","serviceWorker.js","services/base-http.service.js","services/tasks.service.js","stores/tasks.store.js","stores/user.store.js","services/auth.service.js","index.js"],"names":["ErrorContainer","styled","div","_templateObject","ErrorHeading","h1","_templateObject2","ErrorList","ul","_templateObject3","ErrorMessage","renderMessageArray","errors","constraints","map","constraint","idx","react_default","a","createElement","key","message","this","props","Array","isArray","Component","Heading","SignInPage_templateObject","FormContainer","SignInPage_templateObject2","FormField","TextField","SignInPage_templateObject3","SignInPage","inject","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submit","asyncToGenerator","regenerator_default","mark","_callee","_this$state","username","password","errorMessage","wrap","_context","prev","next","setState","state","userStore","signin","routerStore","push","t0","response","data","stop","goToSignUp","errorMesssage","_this2","className","ErrorMessage_ErrorMessage","id","label","margin","variant","onChange","e","target","value","type","Button","style","marginBottom","fullWidth","color","onClick","SignUpPage_templateObject","SignUpPage_templateObject2","SignUpPage_templateObject3","SignUpPage","signup","SignUpPage_FormContainer","SignUpPage_Heading","SignUpPage_FormField","CardContainer","Task_templateObject","CardTitle","Task_templateObject2","Task","deleteTask","tasksStore","handleStatusChange","updateTaskStatus","_this$props","title","description","Card","CardContent","CardActions","padding","disableSpacing","Grid","justify","container","item","FormControl","width","Select","status","displayEmpty","MenuItem","IconButton","Delete_default","FiltersContainer","TasksFilters_templateObject","ControlContainer","TasksFilters_templateObject2","TasksFilters","filters$","Subject","syncFilters","search","handleStatusFilterChange","handleSearchTermChange","filters","pipe","debounceTime","subscribe","updateFilters","placeholder","InputProps","startAdornment","InputAdornment","position","Search_default","TasksWrapper","TasksPage_templateObject","TasksHeader","TasksPage_templateObject2","Title","TasksPage_templateObject3","CreateButtonContainer","_templateObject4","TasksContainer","_templateObject5","EmptyTasksPlaceholder","p","_templateObject6","SignOutIconContainer","_templateObject7","TasksPage","observer","handleSignOut","signout","resetTasks","renderTasks","tasks","length","task","components_Task","fetchTasks","Fab","Add_default","ExitToApp_default","components_TasksFilters","FormWrapper","CreateTaskPage_templateObject","CreateTaskPage_templateObject2","CreateTaskPage","handleSubmitTask","createTask","CreateTaskPage_FormContainer","multiline","rows","marginTop","App","react","react_router","exact","path","component","Boolean","window","location","hostname","match","BaseHttpService","BASE_URL","process","_accessToken","endpoint","options","assign","_getCommonOptions","axios","get","concat","catch","error","_handleHttpError","post","delete","_this3","patch","_this4","statusCode","_handle401","token","loadToken","headers","Authorization","accessToken","localStorage","setItem","getItem","removeItem","TasksService","_ref","queryObj","queryStr","queryString","stringify","TasksStore","tasksService","initializerDefineProperty","_descriptor","_descriptor2","result","findIndex","splice","find","observable","action","UserStore","authService","user_store_descriptor","removeToken","AuthService","saveToken","services","stores","RouterStore","browserHistory","createBrowserHistory","history","syncHistoryWithStore","Root","index_module","react_router_dom","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75bef5be.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ErrorContainer = styled.div`\n  width: 100%;\n  padding: 8px 16px;\n  background-color: #f7c5c0;\n  color: #a51809;\n  box-sizing: border-box;\n  margin-bottom: 10px;\n`;\n\nconst ErrorHeading = styled.h1`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n\nconst ErrorList = styled.ul`\n  padding-left: 20px;\n`;\n\nexport default class ErrorMessage extends Component {\n  renderMessageArray = errors => {\n    const constraints = errors.map((constraint, idx) => <li key={idx}>{constraint}</li>);\n \n    return <ErrorList>{constraints}</ErrorList>;\n  };\n \n  render() {\n    const { message } = this.props;\n \n    return (\n      <ErrorContainer>\n        <ErrorHeading>Oops!</ErrorHeading>\n        {Array.isArray(message) ? this.renderMessageArray(message) : <p>{message}</p>}\n      </ErrorContainer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport './SignInPage.scss';\nimport { inject } from 'mobx-react';\nimport ErrorMessage from '../../components/ErrorMessage';\n\nconst Heading = styled.h1`\n  margin-top: 0;\n`;\n\nconst FormContainer = styled.div`\n  max-width: 480px;\n  width: 100%;\n  background-color: #edf4ff;\n  padding: 30px;\n  border-radius: 5px;\n`;\n\nconst FormField = styled(TextField)`\n  width: 100%;\n`;\n\n@inject('userStore', 'routerStore')\nclass SignInPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errorMesssage: null,\n    };\n  }\n\n  submit = async () => {\n    this.setState({ errorMessage: null });\n    const { username, password } = this.state;\n\n    try {\n      await this.props.userStore.signin(username, password);\n      this.props.routerStore.push('/tasks');\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      this.setState({ errorMessage });\n    }\n  };\n\n  goToSignUp = () => {\n    this.props.routerStore.push('/signup')\n  };\n\n  render() {\n    const { errorMessage } = this.state;\n\n    return (\n      <div className=\"fullscreen-wrapper\">\n        <FormContainer>\n          <Heading>Hello!</Heading>\n          <p>Fill in your username and password to sign in.</p>\n          \n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\n\n          <div>\n            <FormField\n              id=\"outlined-name\"\n              label=\"Username\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              onChange={e => this.setState({ username: e.target.value })}\n            />\n          </div>\n          <div>\n            <FormField\n              id=\"outlined-name\"\n              label=\"Password\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"password\"\n              onChange={e => this.setState({ password: e.target.value })}\n            />\n          </div>\n          <hr/>\n          <div>\n            <Button\n              style={{ marginBottom: '10px' }}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.submit}\n            >\n              SIGN IN\n            </Button>\n\n            <Button fullWidth onClick={this.goToSignUp}>\n              Don't have an account? Sign up now!\n            </Button>\n          </div>\n        </FormContainer>\n      </div>\n    );\n  }\n}\n\nexport default SignInPage;\n","import React, { Component } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport './SignUpPage.scss';\nimport { inject } from 'mobx-react';\nimport ErrorMessage from '../../components/ErrorMessage';\n\nconst Heading = styled.h1`\n  margin-top: 0;\n`;\n\nconst FormContainer = styled.div`\n  max-width: 480px;\n  width: 100%;\n  background-color: #edf4ff;\n  padding: 30px;\n  border-radius: 5px;\n`;\n\nconst FormField = styled(TextField)`\n  width: 100%;\n`;\n\n@inject('userStore', 'routerStore')\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errorMessage: null,\n    };\n  }\n\n  submit = async () => {\n    const { username, password } = this.state;\n\n    try {\n      await this.props.userStore.signup(username, password);\n      this.props.routerStore.push('/signin');\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      this.setState({ errorMessage });\n    }\n  };\n\n  render() {\n    const { errorMessage } = this.state;\n\n    return (\n      <div className=\"fullscreen-wrapper\">\n        <FormContainer>\n          <Heading>Join us!</Heading>\n          <p>Start managing tasks easily.</p>\n\n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\n\n          <div>\n            <FormField\n              id=\"outlined-name\"\n              label=\"Username\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              onChange={e => this.setState({ username: e.target.value })}\n            />\n          </div>\n          <div>\n            <FormField\n              id=\"outlined-name\"\n              label=\"Password\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"password\"\n              onChange={e => this.setState({ password: e.target.value })}\n            />\n          </div>\n          <p>\n            Passwords must contain at least 1 upper case letter, 1 lower case letter and one number OR special charracter.\n          </p>\n          <hr/>\n          <div>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.submit}\n            >\n              SIGN UP\n            </Button>\n          </div>\n        </FormContainer>\n      </div>\n    );\n  }\n}\n\nexport default SignUpPage;\n","import React, { Component } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  IconButton,\n  MenuItem,\n  Select,\n  FormControl,\n  Grid\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styled from 'styled-components';\nimport { inject } from 'mobx-react';\n\nconst CardContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst CardTitle = styled.h1`\n  margin: 8px 0;\n  font-size: 22px;\n`;\n\n@inject('tasksStore')\nclass Task extends Component {\n  deleteTask = () => {\n    this.props.tasksStore.deleteTask(this.props.id);\n  };\n\n  handleStatusChange = e => {\n    this.props.tasksStore.updateTaskStatus(this.props.id, e.target.value);\n  };\n\n  render() {\n    const { title, description } = this.props;\n\n    return (\n      <CardContainer>\n        <Card>\n          <CardContent>\n            <CardTitle>{title}</CardTitle>\n            {description}\n          </CardContent>\n          <CardActions style={{ padding: '14px' }} disableSpacing>\n            <Grid\n              justify=\"space-between\" // Add it here :)\n              container \n            >\n              <Grid item>\n                <FormControl style={{ width: '140px' }}>\n                  <Select\n                    value={this.props.status}\n                    onChange={this.handleStatusChange}\n                    displayEmpty\n                  >\n                    <MenuItem value={'OPEN'}>Open</MenuItem>\n                    <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\n                    <MenuItem value={'DONE'}>Done</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item>\n                <IconButton onClick={this.deleteTask}>\n                  <DeleteIcon color=\"error\" />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </CardActions>\n        </Card>\n      </CardContainer>\n    );\n  }\n}\n\nexport default Task;\n","import React, { Component } from 'react';\nimport { Grid, FormControl, Select, MenuItem, TextField, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport styled from 'styled-components';\nimport { inject } from 'mobx-react';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst FiltersContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst ControlContainer = styled.div`\n  background-color: #c0cde0;\n  border-radius: 5px;\n  padding: 10px;\n`;\n\n@inject('tasksStore')\nclass TasksFilters extends Component {\n  filters$ = new Subject();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: props.tasksStore.filters.status,\n      search: props.tasksStore.filters.search,\n    };\n\n    this.filters$\n      .pipe(\n        debounceTime(500),\n      )\n      .subscribe(filters => {\n        props.tasksStore.updateFilters(filters);\n      });\n  }\n\n  syncFilters = () => {\n    const { status, search } = this.state;\n    this.filters$.next({ status, search });\n  }\n\n  handleStatusFilterChange = e => {\n    const status = e.target.value;\n    this.setState({ status }, this.syncFilters);\n  };\n\n  handleSearchTermChange = e => {\n    const search = e.target.value;\n    this.setState({ search }, this.syncFilters);\n  }\n\n  render() {\n    return (\n      <FiltersContainer>\n        <Grid\n          justify=\"space-between\" // Add it here :)\n          container\n        >\n          <Grid item>\n            <ControlContainer>\n              <FormControl style={{ width: '220px' }}>\n                <TextField\n                  placeholder=\"Search...\"\n                  value={this.state.search}\n                  onChange={this.handleSearchTermChange}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </FormControl>\n            </ControlContainer>\n          </Grid>\n\n          <Grid item>\n            <ControlContainer>\n              <FormControl style={{ width: '220px' }}>\n                <Select\n                  value={this.state.status}\n                  onChange={this.handleStatusFilterChange}\n                  displayEmpty\n                >\n                  <MenuItem value=\"\">No status filter</MenuItem>\n                  <MenuItem value={'OPEN'}>Open</MenuItem>\n                  <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\n                  <MenuItem value={'DONE'}>Done</MenuItem>\n                </Select>\n              </FormControl>\n            </ControlContainer>\n          </Grid>\n        </Grid>\n      </FiltersContainer>\n    );\n  }\n}\n\nexport default TasksFilters;\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Fab, IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SignOutIcon from '@material-ui/icons/ExitToApp'\nimport styled from 'styled-components';\nimport Task from '../../components/Task';\nimport TasksFilters from '../../components/TasksFilters';\n\nconst TasksWrapper = styled.div`\n  width: 100%;\n  max-width: 860px;\n  margin: auto;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst TasksHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  border-bottom: 3px solid #757c87;\n`;\n\nconst Title = styled.h1`\n  width: 100%;\n  color: #edf4ff;\n`;\n\nconst CreateButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TasksContainer = styled.div`\n  padding-top: 20px;\n`;\n\nconst EmptyTasksPlaceholder = styled.p`\n  color: #edf4ff;\n  text-align: center;\n  font-size: 22px;\n`;\n\nconst SignOutIconContainer = styled.div`\n  margin-left: 10px;\n  \n  .signOutIcon {\n    fill: #edf4ff;\n  }\n`;\n\n@inject('tasksStore', 'routerStore', 'userStore')\n@observer\nclass TasksPage extends Component {\n  componentDidMount() {\n    this.props.tasksStore.fetchTasks();\n  }\n  \n  handleSignOut = () => {\n    const { userStore, tasksStore, routerStore } = this.props;\n    userStore.signout();\n    tasksStore.resetTasks();\n    routerStore.push('/signin');\n  };\n\n  renderTasks = () => {\n    const { tasksStore } = this.props;\n\n    if (!tasksStore.tasks.length) {\n      return <EmptyTasksPlaceholder>No tasks available. Create one?</EmptyTasksPlaceholder>\n    }\n\n    return tasksStore.tasks.map(task => (\n      <Task\n        key={task.id}\n        id={task.id}\n        title={task.title}\n        description={task.description}\n        status={task.status}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <TasksWrapper>\n        <TasksHeader>\n          <Title>Get things done.</Title>\n\n          <CreateButtonContainer>\n            <Fab\n              variant=\"extended\"\n              onClick={() => this.props.routerStore.push('/tasks/create')}\n            >\n              <AddIcon />\n              Create Task\n            </Fab>\n\n            <SignOutIconContainer>\n              <IconButton onClick={this.handleSignOut}>\n                <SignOutIcon className=\"signOutIcon\" />\n              </IconButton>\n            </SignOutIconContainer>\n          </CreateButtonContainer>\n        </TasksHeader>\n\n        <TasksFilters />\n\n        <TasksContainer>\n          {this.renderTasks()}\n        </TasksContainer>\n      </TasksWrapper>\n    );\n  }\n}\n\nexport default TasksPage;\n","import React, { Component } from 'react';\nimport { TextField, FormControl, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { inject } from 'mobx-react';\nimport ErrorMessage from '../../components/ErrorMessage';\n\nconst FormWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FormContainer = styled.div`\n  max-width: 480px;\n  width: 100%;\n  background-color: #edf4ff;\n  padding: 30px;\n  border-radius: 5px;\n`;\n\n@inject('tasksStore', 'routerStore')\nclass CreateTaskPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      description: '',\n      errorMessage: null,\n    };\n  }\n\n  handleSubmitTask = async () => {\n    const { tasksStore, routerStore } = this.props;\n    const { title, description } = this.state;\n\n    try {\n      await tasksStore.createTask(title, description);\n      routerStore.push('/tasks');\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      this.setState({ errorMessage });\n    }\n  };\n\n  render() {\n    return (\n      <FormWrapper>\n        <FormContainer>\n          <h1>Create a new task</h1>\n          <p>Provide information about the task you wish to complete.</p>\n\n          { this.state.errorMessage && <ErrorMessage message={this.state.errorMessage} />}\n\n          <FormControl fullWidth>\n            <TextField\n              label=\"Title\"\n              placeholder=\"Title\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={e => this.setState({ title: e.target.value })}\n            />\n          </FormControl>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Description\"\n              placeholder=\"Description\"\n              multiline\n              rows=\"8\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={e => this.setState({ description: e.target.value })}\n            />\n          </FormControl>\n\n          <Button\n            style={{ marginTop: '10px' }}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleSubmitTask}\n          >\n            CREATE TASK\n          </Button>\n        </FormContainer>\n      </FormWrapper>\n    );\n  }\n}\n\nexport default CreateTaskPage;\n","import React, { Component, Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\n\nimport SignInPage from './pages/signin/SignInPage';\nimport SignUpPage from './pages/signup/SignUpPage';\nimport TasksPage from './pages/tasks/TasksPage';\nimport CreateTaskPage from './pages/create-task/CreateTaskPage';\n\n@inject('routerStore')\n@observer\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Route exact path=\"/\" component={SignInPage} />\n        <Route path=\"/signin/\" component={SignInPage} />\n        <Route path=\"/signup/\" component={SignUpPage} />\n        <Route exact path=\"/tasks\" component={TasksPage} />\n        <Route exact path=\"/tasks/create\" component={CreateTaskPage} />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nexport default class BaseHttpService {\n  BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3000';\n  _accessToken = null;\n\n  constructor(routerStore) {\n    this.routerStore = routerStore;\n  }\n\n  async get(endpoint, options = {}) {\n    Object.assign(options, this._getCommonOptions());\n    return axios.get(`${this.BASE_URL}/${endpoint}`, options)\n      .catch(error => this._handleHttpError(error));\n  }\n\n  async post(endpoint, data = {}, options = {}) {\n    Object.assign(options, this._getCommonOptions());\n    return axios.post(`${this.BASE_URL}/${endpoint}`, data, options)\n      .catch(error => this._handleHttpError(error));  \n  }\n\n  async delete(endpoint, options = {}) {\n    Object.assign(options, this._getCommonOptions());\n    return axios.delete(`${this.BASE_URL}/${endpoint}`, options)\n      .catch(error => this._handleHttpError(error));     \n  }\n\n  async patch(endpoint, data = {}, options = {}) {\n    Object.assign(options, this._getCommonOptions());\n    return axios.patch(`${this.BASE_URL}/${endpoint}`, data, options)\n      .catch(error => this._handleHttpError(error));   \n  }\n\n  _handleHttpError(error) {\n    const { statusCode } = error.response.data;\n\n    if (statusCode !== 401) {\n      throw error;\n    } else {\n      return this._handle401();\n    }\n  }\n\n  _handle401() {\n    this.routerStore.push('/signin');\n  }\n\n  _getCommonOptions() {\n    const token = this.loadToken();\n\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  get accessToken() {\n    return this._accessToken ? this._accessToken : this.loadToken();\n  }\n\n  saveToken(accessToken) {\n    this._accessToken = accessToken;\n    return localStorage.setItem('accessToken', accessToken);\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('accessToken');\n    this._accessToken = token;\n    return token;\n  }\n\n  removeToken() {\n    localStorage.removeItem('accessToken');\n  }\n}\n","import BaseHttpService from './base-http.service';\nimport queryString from 'query-string';\n\nexport default class TasksService extends BaseHttpService {\n  fetchTasks({ status, search}) {\n    const queryObj = {};\n\n    if (status.length) {\n      queryObj.status = status;\n    }\n\n    if (search.length) {\n      queryObj.search = search;\n    }\n\n    const queryStr = queryString.stringify(queryObj);\n    return this.get('tasks' + (queryStr ? `?${queryStr}` : ''));\n  }\n\n  async deleteTask(id) {\n    await this.delete(`tasks/${id}`);\n  }\n\n  updateTaskStatus(id, status) {\n    return this.patch(`tasks/${id}/status`, { status });\n  }\n\n  createTask(title, description) {\n    return this.post(`tasks`, { title, description });\n  }\n}\n","import { observable, action } from 'mobx';\n\nexport default class TasksStore {\n  @observable tasks = [];\n  @observable filters = { status: '', search: '' };\n\n  constructor(tasksService) {\n    this.tasksService = tasksService;\n  }\n\n  updateFilters({ status, search }) {\n    this.filters.status = status;\n    this.filters.search = search;\n    this.fetchTasks();\n  }\n\n  @action\n  resetTasks() {\n    this.tasks = [];\n  }\n\n  @action\n  async fetchTasks() {\n    const result = await this.tasksService.fetchTasks(this.filters);\n\n    if (result) {\n      this.tasks = result.data;\n    }\n  }\n\n  @action\n  async createTask(title, description) {\n    const result = await this.tasksService.createTask(title, description);\n\n    if (result) {\n      this.tasks.push(result.data);\n    }\n  }\n\n  @action\n  async deleteTask(id) {\n    const idx = this.tasks.findIndex(task => task.id === id);\n    await this.tasksService.deleteTask(id);\n    this.tasks.splice(idx, 1);\n  }\n\n  @action\n  async updateTaskStatus(id, status) {\n    const task = this.tasks.find(task => task.id === id);\n    await this.tasksService.updateTaskStatus(id, status);\n    task.status = status;\n  }\n}\n","import { observable, action } from 'mobx';\n\nexport default class UserStore {\n  @observable username = null;\n\n  constructor(authService) {\n    this.authService = authService;\n  }\n\n  @action\n  async signin(username, password) {\n    this.username = await this.authService.signin(username, password);\n  }\n\n  @action\n  async signup(username, password) {\n    return this.authService.signup(username, password);\n  }\n\n  @action\n  signout() {\n    this.username = null;\n    this.authService.removeToken();\n  }\n}\n","import { post } from 'axios';\nimport BaseHttpService from './base-http.service';\n\nexport default class AuthService extends BaseHttpService {\n  async signin(username, password) {\n    const result = await post(`${this.BASE_URL}/auth/signin`, { username, password });\n    const accessToken = result.data.accessToken;\n    this.saveToken(accessToken);\n    return result.data.username;\n  }\n\n  async signup(username, password) {\n    await post(`${this.BASE_URL}/auth/signup`, { username, password });\n  }\n\n  async signout() {\n    this.removeToken();\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { createBrowserHistory } from 'history';\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\nimport { Router, HashRouter } from 'react-router-dom';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport TasksService from './services/tasks.service';\nimport TasksStore from './stores/tasks.store';\nimport UserStore from './stores/user.store';\nimport AuthService from './services/auth.service';\n\n\nconst services = {};\nconst stores = {};\n\nstores.routerStore = new RouterStore();\nconst browserHistory = createBrowserHistory();\nconst history = syncHistoryWithStore(browserHistory, stores.routerStore);\n\nservices.tasksService = new TasksService(stores.routerStore);\nservices.authService = new AuthService();\n\nstores.tasksStore = new TasksStore(services.tasksService);\nstores.userStore = new UserStore(services.authService);\n\nconst Root = (\n  <Provider {...stores}>\n    <HashRouter history={history}>\n      <App />\n    </HashRouter>\n  </Provider>\n);\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}